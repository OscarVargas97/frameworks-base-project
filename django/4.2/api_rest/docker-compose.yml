services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    image: django:4.2-${PROJECT_NAME}
    container_name: ${PROJECT_NAME}_web
    volumes:
      - .:/app
      - /usr/share/deviroment/container/fonts:/usr/share/fonts
      - /usr/share/deviroment/container/zsh-sudo/:/usr/share/zsh-sudo/
      - /usr/share/deviroment/container/powerlevel10k:/home/django/powerlevel10k
      - /usr/share/deviroment/container/home/:/home/django/
      
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    restart: "unless-stopped"

  db:
    image: postgres:15-alpine
    container_name: ${PROJECT_NAME}_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${PG_DATABASE_NAME}
      POSTGRES_USER: ${PG_DATABASE_USER}
      POSTGRES_PASSWORD: ${PG_DATABASE_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_DATABASE_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

  cloudbeaver:
    image: dbeaver/cloudbeaver:latest
    container_name: ${PROJECT_NAME}_cloudbeaver
    ports:
      - "8080:8978"
    environment:
      CB_SERVER_NAME: "CloudBeaver"
    volumes:
      - cloudbeaver_data:/opt/cloudbeaver/workspace

  mongodb:
    image: mongo:6.0
    container_name: ${PROJECT_NAME}_mongodb
    volumes:
      - mongodata:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MDB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MDB_PASSWORD}
    ports:
      - "27017:27017"

  redis:
    image: redis:6
    container_name: ${PROJECT_NAME}_redis
    env_file: .env
    command: redis-server --requirepass $REDIS_PASSWORD
    ports:
      - 6379:6379
    volumes:
      - ${PWD}/_data/redis:/var/lib/redis

  celery:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    image: celery:latest-${PROJECT_NAME}
    container_name: ${PROJECT_NAME}_celery
    command: [
      "celery",
      "-A",
      "app",
      "worker",
      "-c",
      "1",
      "-l",
      "INFO",
      "--without-heartbeat",
      "--without-gossip",
      "--without-mingle",
    ]
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=app.settings.dev
      - DJANGO_WSGI=app.wsgi
      - DEBUG=False
    volumes:
      - ${PWD}/src:/app
    depends_on:
      - db
      - redis

volumes:
  pgdata:
  cloudbeaver_data:
  static_volume:
  mongodata: